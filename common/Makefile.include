BASE_PATH:=$(shell git rev-parse --show-toplevel)
COMMON_PATH:=$(BASE_PATH)/common

binaries:=$(sort $(binaries) generator checker solver)
include $(COMMON_PATH)/Makefile.base

TESTS?=$(shell $(COMMON_PATH)/gen-tests.sh tests.txt)
TESTS:=$(TESTS)
TEST_GEN_FILES:=$(foreach i, $(TESTS), tests/$(i).gen)
TEST_IN_FILES:=$(foreach i, $(TESTS), tests/$(i).in)
TEST_OUT_FILES:=$(foreach i, $(TESTS), tests/$(i).out)
export SOLUTION?=./solver.exe
export DEFAULT_GRADER_NEEDED:=
ifneq ($(filter grader, $(binaries)), )
	export GRADER?=./grader.exe
else ifndef GRADER
	export GRADER:=$(COMMON_PATH)/default-grader/grader.exe
	DEFAULT_GRADER_NEEDED:=$(GRADER)
endif

# Never delete these even if they're intermediary files
.SECONDARY: $(TEST_GEN_FILES) $(TEST_IN_FILES) $(TEST_OUT_FILES)

# These are usually generated automatically, but not always
$(TEST_GEN_FILES) &: tests.txt
	$(COMMON_PATH)/gen-tests.sh tests.txt > /dev/null

tests/%.in: tests/%.gen generator.exe checker.exe
	@set -e
	@echo -- Generating and checking test $* input
	./generator.exe $(shell cat $<) > $@.tmp
	@$(COMMON_PATH)/run-checker.sh ./checker.exe $@.tmp
	mv $@.tmp $@

tests/%.out: tests/%.in tests/%.gen solver.exe
	@echo -- Generating test $* output
	./solver.exe $(shell cat tests/$*.gen) < $< > $@

.PHONY: test-inputs test-outputs
test-inputs: $(TEST_IN_FILES)
test-outputs: $(TEST_OUT_FILES)

.PHONY: tests
tests: test-inputs test-outputs

$(COMMON_PATH)/default-grader/grader.exe:
	$(MAKE) -C $(COMMON_PATH)/default-grader

.PHONY: run-tests
run-tests: tests all $(DEFAULT_GRADER_NEEDED)
	@echo -- Running tests on $(SOLUTION) graded by $(GRADER)
	$(COMMON_PATH)/run-tests.sh $(TESTS)

.PHONY: package-tests
package-tests: tests
	@echo -- Packaging $(words $(TESTS)) tests
	rm -f tests.zip
	zip tests.zip $(TEST_IN_FILES) $(TEST_OUT_FILES)


.PHONY: clean-tests
clean-tests:
	rm tests/*
